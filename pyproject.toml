[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hello-cli"
version = "0.1.0"
description = "A modern Python CLI tool example"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]
requires-python = ">=3.13.5"
dependencies = [
    "typer[all]>=0.12.0",
    "rich>=13.0.0",
    "claude-code-sdk>=0.0.11",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/hello-cli"
Repository = "https://github.com/yourusername/hello-cli"
Issues = "https://github.com/yourusername/hello-cli/issues"

[project.scripts]
hello-cli = "hello_cli.main:app"

[tool.hatch.build.targets.wheel]
packages = ["hello_cli"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
cache_dir = "/dev/null"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=hello_cli"

[tool.coverage.run]
source = ["hello_cli"]
branch = true

[tool.coverage.report]
show_missing = true
fail_under = 80
